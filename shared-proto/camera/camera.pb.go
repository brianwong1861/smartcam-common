// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.32.1
// source: camera/camera.proto

package camera

import (
	common "github.com/brianwong1861/smartcam-common/shared-proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Camera device information
type Camera struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RtspUrl   string                 `protobuf:"bytes,3,opt,name=rtsp_url,json=rtspUrl,proto3" json:"rtsp_url,omitempty"`
	Status    string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	TenantId  string                 `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Camera) Reset() {
	*x = Camera{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Camera) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Camera) ProtoMessage() {}

func (x *Camera) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Camera.ProtoReflect.Descriptor instead.
func (*Camera) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{0}
}

func (x *Camera) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Camera) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Camera) GetRtspUrl() string {
	if x != nil {
		return x.RtspUrl
	}
	return ""
}

func (x *Camera) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Camera) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *Camera) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Camera) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Device command
type DeviceCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DeviceId    string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CommandType string                 `protobuf:"bytes,3,opt,name=command_type,json=commandType,proto3" json:"command_type,omitempty"`
	Payload     string                 `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	Status      string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExecutedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=executed_at,json=executedAt,proto3" json:"executed_at,omitempty"`
}

func (x *DeviceCommand) Reset() {
	*x = DeviceCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceCommand) ProtoMessage() {}

func (x *DeviceCommand) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceCommand.ProtoReflect.Descriptor instead.
func (*DeviceCommand) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceCommand) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeviceCommand) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *DeviceCommand) GetCommandType() string {
	if x != nil {
		return x.CommandType
	}
	return ""
}

func (x *DeviceCommand) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *DeviceCommand) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeviceCommand) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceCommand) GetExecutedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExecutedAt
	}
	return nil
}

// Request/Response messages
type GetCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraId string `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
}

func (x *GetCameraRequest) Reset() {
	*x = GetCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCameraRequest) ProtoMessage() {}

func (x *GetCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCameraRequest.ProtoReflect.Descriptor instead.
func (*GetCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{2}
}

func (x *GetCameraRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

type ListCamerasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId   string                    `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Pagination *common.PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCamerasRequest) Reset() {
	*x = ListCamerasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCamerasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCamerasRequest) ProtoMessage() {}

func (x *ListCamerasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCamerasRequest.ProtoReflect.Descriptor instead.
func (*ListCamerasRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{3}
}

func (x *ListCamerasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListCamerasRequest) GetPagination() *common.PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListCamerasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cameras    []*Camera                  `protobuf:"bytes,1,rep,name=cameras,proto3" json:"cameras,omitempty"`
	Pagination *common.PaginationResponse `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListCamerasResponse) Reset() {
	*x = ListCamerasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCamerasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCamerasResponse) ProtoMessage() {}

func (x *ListCamerasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCamerasResponse.ProtoReflect.Descriptor instead.
func (*ListCamerasResponse) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{4}
}

func (x *ListCamerasResponse) GetCameras() []*Camera {
	if x != nil {
		return x.Cameras
	}
	return nil
}

func (x *ListCamerasResponse) GetPagination() *common.PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type CreateCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	RtspUrl  string `protobuf:"bytes,2,opt,name=rtsp_url,json=rtspUrl,proto3" json:"rtsp_url,omitempty"`
	TenantId string `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *CreateCameraRequest) Reset() {
	*x = CreateCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCameraRequest) ProtoMessage() {}

func (x *CreateCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCameraRequest.ProtoReflect.Descriptor instead.
func (*CreateCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCameraRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCameraRequest) GetRtspUrl() string {
	if x != nil {
		return x.RtspUrl
	}
	return ""
}

func (x *CreateCameraRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UpdateCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraId string `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	RtspUrl  string `protobuf:"bytes,3,opt,name=rtsp_url,json=rtspUrl,proto3" json:"rtsp_url,omitempty"`
	Status   string `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UpdateCameraRequest) Reset() {
	*x = UpdateCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCameraRequest) ProtoMessage() {}

func (x *UpdateCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCameraRequest.ProtoReflect.Descriptor instead.
func (*UpdateCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCameraRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

func (x *UpdateCameraRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateCameraRequest) GetRtspUrl() string {
	if x != nil {
		return x.RtspUrl
	}
	return ""
}

func (x *UpdateCameraRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteCameraRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CameraId string `protobuf:"bytes,1,opt,name=camera_id,json=cameraId,proto3" json:"camera_id,omitempty"`
}

func (x *DeleteCameraRequest) Reset() {
	*x = DeleteCameraRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCameraRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCameraRequest) ProtoMessage() {}

func (x *DeleteCameraRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCameraRequest.ProtoReflect.Descriptor instead.
func (*DeleteCameraRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCameraRequest) GetCameraId() string {
	if x != nil {
		return x.CameraId
	}
	return ""
}

type SendCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId    string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	CommandType string `protobuf:"bytes,2,opt,name=command_type,json=commandType,proto3" json:"command_type,omitempty"`
	Payload     string `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *SendCommandRequest) Reset() {
	*x = SendCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendCommandRequest) ProtoMessage() {}

func (x *SendCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendCommandRequest.ProtoReflect.Descriptor instead.
func (*SendCommandRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{8}
}

func (x *SendCommandRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *SendCommandRequest) GetCommandType() string {
	if x != nil {
		return x.CommandType
	}
	return ""
}

func (x *SendCommandRequest) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

type GetCommandStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId,proto3" json:"command_id,omitempty"`
}

func (x *GetCommandStatusRequest) Reset() {
	*x = GetCommandStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_camera_camera_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCommandStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommandStatusRequest) ProtoMessage() {}

func (x *GetCommandStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_camera_camera_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommandStatusRequest.ProtoReflect.Descriptor instead.
func (*GetCommandStatusRequest) Descriptor() ([]byte, []int) {
	return file_camera_camera_proto_rawDescGZIP(), []int{9}
}

func (x *GetCommandStatusRequest) GetCommandId() string {
	if x != nil {
		return x.CommandId
	}
	return ""
}

var File_camera_camera_proto protoreflect.FileDescriptor

var file_camera_camera_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x06, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x74, 0x73, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x74, 0x73, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x0d, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x2f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x65,
	0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x49, 0x64, 0x22, 0x6c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72,
	0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x07, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x61, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x74, 0x73, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x74, 0x73, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72,
	0x74, 0x73, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x74, 0x73, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x32,
	0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x49, 0x64, 0x22, 0x6e, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0x38, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x32, 0xdb, 0x03, 0x0a,
	0x0d, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x18, 0x2e, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x43,
	0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x46, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x73, 0x12, 0x1a, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1b, 0x2e,
	0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x3b, 0x0a, 0x0c, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x6d,
	0x65, 0x72, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x2e, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x12, 0x1b, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x63, 0x61,
	0x6d, 0x65, 0x72, 0x61, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x4a,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1f, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x72, 0x69, 0x61, 0x6e, 0x77, 0x6f,
	0x6e, 0x67, 0x31, 0x38, 0x36, 0x31, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x61, 0x6d, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_camera_camera_proto_rawDescOnce sync.Once
	file_camera_camera_proto_rawDescData = file_camera_camera_proto_rawDesc
)

func file_camera_camera_proto_rawDescGZIP() []byte {
	file_camera_camera_proto_rawDescOnce.Do(func() {
		file_camera_camera_proto_rawDescData = protoimpl.X.CompressGZIP(file_camera_camera_proto_rawDescData)
	})
	return file_camera_camera_proto_rawDescData
}

var file_camera_camera_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_camera_camera_proto_goTypes = []any{
	(*Camera)(nil),                    // 0: camera.Camera
	(*DeviceCommand)(nil),             // 1: camera.DeviceCommand
	(*GetCameraRequest)(nil),          // 2: camera.GetCameraRequest
	(*ListCamerasRequest)(nil),        // 3: camera.ListCamerasRequest
	(*ListCamerasResponse)(nil),       // 4: camera.ListCamerasResponse
	(*CreateCameraRequest)(nil),       // 5: camera.CreateCameraRequest
	(*UpdateCameraRequest)(nil),       // 6: camera.UpdateCameraRequest
	(*DeleteCameraRequest)(nil),       // 7: camera.DeleteCameraRequest
	(*SendCommandRequest)(nil),        // 8: camera.SendCommandRequest
	(*GetCommandStatusRequest)(nil),   // 9: camera.GetCommandStatusRequest
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
	(*common.PaginationRequest)(nil),  // 11: common.PaginationRequest
	(*common.PaginationResponse)(nil), // 12: common.PaginationResponse
	(*common.CommonResponse)(nil),     // 13: common.CommonResponse
}
var file_camera_camera_proto_depIdxs = []int32{
	10, // 0: camera.Camera.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: camera.Camera.updated_at:type_name -> google.protobuf.Timestamp
	10, // 2: camera.DeviceCommand.created_at:type_name -> google.protobuf.Timestamp
	10, // 3: camera.DeviceCommand.executed_at:type_name -> google.protobuf.Timestamp
	11, // 4: camera.ListCamerasRequest.pagination:type_name -> common.PaginationRequest
	0,  // 5: camera.ListCamerasResponse.cameras:type_name -> camera.Camera
	12, // 6: camera.ListCamerasResponse.pagination:type_name -> common.PaginationResponse
	2,  // 7: camera.CameraService.GetCamera:input_type -> camera.GetCameraRequest
	3,  // 8: camera.CameraService.ListCameras:input_type -> camera.ListCamerasRequest
	5,  // 9: camera.CameraService.CreateCamera:input_type -> camera.CreateCameraRequest
	6,  // 10: camera.CameraService.UpdateCamera:input_type -> camera.UpdateCameraRequest
	7,  // 11: camera.CameraService.DeleteCamera:input_type -> camera.DeleteCameraRequest
	8,  // 12: camera.CameraService.SendCommand:input_type -> camera.SendCommandRequest
	9,  // 13: camera.CameraService.GetCommandStatus:input_type -> camera.GetCommandStatusRequest
	0,  // 14: camera.CameraService.GetCamera:output_type -> camera.Camera
	4,  // 15: camera.CameraService.ListCameras:output_type -> camera.ListCamerasResponse
	0,  // 16: camera.CameraService.CreateCamera:output_type -> camera.Camera
	0,  // 17: camera.CameraService.UpdateCamera:output_type -> camera.Camera
	13, // 18: camera.CameraService.DeleteCamera:output_type -> common.CommonResponse
	1,  // 19: camera.CameraService.SendCommand:output_type -> camera.DeviceCommand
	1,  // 20: camera.CameraService.GetCommandStatus:output_type -> camera.DeviceCommand
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_camera_camera_proto_init() }
func file_camera_camera_proto_init() {
	if File_camera_camera_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_camera_camera_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Camera); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*DeviceCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListCamerasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ListCamerasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCameraRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SendCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_camera_camera_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetCommandStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_camera_camera_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_camera_camera_proto_goTypes,
		DependencyIndexes: file_camera_camera_proto_depIdxs,
		MessageInfos:      file_camera_camera_proto_msgTypes,
	}.Build()
	File_camera_camera_proto = out.File
	file_camera_camera_proto_rawDesc = nil
	file_camera_camera_proto_goTypes = nil
	file_camera_camera_proto_depIdxs = nil
}
