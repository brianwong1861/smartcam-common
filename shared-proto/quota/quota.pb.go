// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.32.1
// source: quota/quota.proto

package quota

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type QuotaType int32

const (
	QuotaType_QUOTA_TYPE_STORAGE   QuotaType = 0
	QuotaType_QUOTA_TYPE_BANDWIDTH QuotaType = 1
	QuotaType_QUOTA_TYPE_REQUESTS  QuotaType = 2
)

// Enum value maps for QuotaType.
var (
	QuotaType_name = map[int32]string{
		0: "QUOTA_TYPE_STORAGE",
		1: "QUOTA_TYPE_BANDWIDTH",
		2: "QUOTA_TYPE_REQUESTS",
	}
	QuotaType_value = map[string]int32{
		"QUOTA_TYPE_STORAGE":   0,
		"QUOTA_TYPE_BANDWIDTH": 1,
		"QUOTA_TYPE_REQUESTS":  2,
	}
)

func (x QuotaType) Enum() *QuotaType {
	p := new(QuotaType)
	*p = x
	return p
}

func (x QuotaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuotaType) Descriptor() protoreflect.EnumDescriptor {
	return file_quota_quota_proto_enumTypes[0].Descriptor()
}

func (QuotaType) Type() protoreflect.EnumType {
	return &file_quota_quota_proto_enumTypes[0]
}

func (x QuotaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuotaType.Descriptor instead.
func (QuotaType) EnumDescriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{0}
}

type AlertType int32

const (
	AlertType_ALERT_TYPE_WARNING  AlertType = 0
	AlertType_ALERT_TYPE_CRITICAL AlertType = 1
	AlertType_ALERT_TYPE_EXCEEDED AlertType = 2
)

// Enum value maps for AlertType.
var (
	AlertType_name = map[int32]string{
		0: "ALERT_TYPE_WARNING",
		1: "ALERT_TYPE_CRITICAL",
		2: "ALERT_TYPE_EXCEEDED",
	}
	AlertType_value = map[string]int32{
		"ALERT_TYPE_WARNING":  0,
		"ALERT_TYPE_CRITICAL": 1,
		"ALERT_TYPE_EXCEEDED": 2,
	}
)

func (x AlertType) Enum() *AlertType {
	p := new(AlertType)
	*p = x
	return p
}

func (x AlertType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertType) Descriptor() protoreflect.EnumDescriptor {
	return file_quota_quota_proto_enumTypes[1].Descriptor()
}

func (AlertType) Type() protoreflect.EnumType {
	return &file_quota_quota_proto_enumTypes[1]
}

func (x AlertType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertType.Descriptor instead.
func (AlertType) EnumDescriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{1}
}

type AlertStatus int32

const (
	AlertStatus_ALERT_STATUS_UNREAD   AlertStatus = 0
	AlertStatus_ALERT_STATUS_READ     AlertStatus = 1
	AlertStatus_ALERT_STATUS_RESOLVED AlertStatus = 2
)

// Enum value maps for AlertStatus.
var (
	AlertStatus_name = map[int32]string{
		0: "ALERT_STATUS_UNREAD",
		1: "ALERT_STATUS_READ",
		2: "ALERT_STATUS_RESOLVED",
	}
	AlertStatus_value = map[string]int32{
		"ALERT_STATUS_UNREAD":   0,
		"ALERT_STATUS_READ":     1,
		"ALERT_STATUS_RESOLVED": 2,
	}
)

func (x AlertStatus) Enum() *AlertStatus {
	p := new(AlertStatus)
	*p = x
	return p
}

func (x AlertStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlertStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_quota_quota_proto_enumTypes[2].Descriptor()
}

func (AlertStatus) Type() protoreflect.EnumType {
	return &file_quota_quota_proto_enumTypes[2]
}

func (x AlertStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlertStatus.Descriptor instead.
func (AlertStatus) EnumDescriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{2}
}

type ActionType int32

const (
	ActionType_ACTION_TYPE_ALLOCATED         ActionType = 0
	ActionType_ACTION_TYPE_DEALLOCATED       ActionType = 1
	ActionType_ACTION_TYPE_USED              ActionType = 2
	ActionType_ACTION_TYPE_RELEASED          ActionType = 3
	ActionType_ACTION_TYPE_EXPIRED           ActionType = 4
	ActionType_ACTION_TYPE_THRESHOLD_CHANGED ActionType = 5
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_ALLOCATED",
		1: "ACTION_TYPE_DEALLOCATED",
		2: "ACTION_TYPE_USED",
		3: "ACTION_TYPE_RELEASED",
		4: "ACTION_TYPE_EXPIRED",
		5: "ACTION_TYPE_THRESHOLD_CHANGED",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_ALLOCATED":         0,
		"ACTION_TYPE_DEALLOCATED":       1,
		"ACTION_TYPE_USED":              2,
		"ACTION_TYPE_RELEASED":          3,
		"ACTION_TYPE_EXPIRED":           4,
		"ACTION_TYPE_THRESHOLD_CHANGED": 5,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_quota_quota_proto_enumTypes[3].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_quota_quota_proto_enumTypes[3]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{3}
}

// Messages for Storage Quota
type StorageQuota struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid              string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	UserId            uint32                 `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId          string                 `protobuf:"bytes,4,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	TotalQuota        int64                  `protobuf:"varint,5,opt,name=total_quota,json=totalQuota,proto3" json:"total_quota,omitempty"`
	UsedQuota         int64                  `protobuf:"varint,6,opt,name=used_quota,json=usedQuota,proto3" json:"used_quota,omitempty"`
	AvailableQuota    int64                  `protobuf:"varint,7,opt,name=available_quota,json=availableQuota,proto3" json:"available_quota,omitempty"`
	ReservedQuota     int64                  `protobuf:"varint,8,opt,name=reserved_quota,json=reservedQuota,proto3" json:"reserved_quota,omitempty"`
	WarningThreshold  float64                `protobuf:"fixed64,9,opt,name=warning_threshold,json=warningThreshold,proto3" json:"warning_threshold,omitempty"`
	CriticalThreshold float64                `protobuf:"fixed64,10,opt,name=critical_threshold,json=criticalThreshold,proto3" json:"critical_threshold,omitempty"`
	AutoExpand        bool                   `protobuf:"varint,11,opt,name=auto_expand,json=autoExpand,proto3" json:"auto_expand,omitempty"`
	MaxExpansion      int64                  `protobuf:"varint,12,opt,name=max_expansion,json=maxExpansion,proto3" json:"max_expansion,omitempty"`
	ExpiresAt         *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IsUnlimited       bool                   `protobuf:"varint,14,opt,name=is_unlimited,json=isUnlimited,proto3" json:"is_unlimited,omitempty"`
	IsActive          bool                   `protobuf:"varint,15,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Metadata          string                 `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedBy         uint32                 `protobuf:"varint,19,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedBy         uint32                 `protobuf:"varint,20,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *StorageQuota) Reset() {
	*x = StorageQuota{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageQuota) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageQuota) ProtoMessage() {}

func (x *StorageQuota) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageQuota.ProtoReflect.Descriptor instead.
func (*StorageQuota) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{0}
}

func (x *StorageQuota) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StorageQuota) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *StorageQuota) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StorageQuota) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *StorageQuota) GetTotalQuota() int64 {
	if x != nil {
		return x.TotalQuota
	}
	return 0
}

func (x *StorageQuota) GetUsedQuota() int64 {
	if x != nil {
		return x.UsedQuota
	}
	return 0
}

func (x *StorageQuota) GetAvailableQuota() int64 {
	if x != nil {
		return x.AvailableQuota
	}
	return 0
}

func (x *StorageQuota) GetReservedQuota() int64 {
	if x != nil {
		return x.ReservedQuota
	}
	return 0
}

func (x *StorageQuota) GetWarningThreshold() float64 {
	if x != nil {
		return x.WarningThreshold
	}
	return 0
}

func (x *StorageQuota) GetCriticalThreshold() float64 {
	if x != nil {
		return x.CriticalThreshold
	}
	return 0
}

func (x *StorageQuota) GetAutoExpand() bool {
	if x != nil {
		return x.AutoExpand
	}
	return false
}

func (x *StorageQuota) GetMaxExpansion() int64 {
	if x != nil {
		return x.MaxExpansion
	}
	return 0
}

func (x *StorageQuota) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *StorageQuota) GetIsUnlimited() bool {
	if x != nil {
		return x.IsUnlimited
	}
	return false
}

func (x *StorageQuota) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StorageQuota) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *StorageQuota) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StorageQuota) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *StorageQuota) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *StorageQuota) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

type QuotaUsage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid        string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	QuotaId     uint32                 `protobuf:"varint,3,opt,name=quota_id,json=quotaId,proto3" json:"quota_id,omitempty"`
	Operation   string                 `protobuf:"bytes,4,opt,name=operation,proto3" json:"operation,omitempty"`
	Amount      int64                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	QuotaBefore int64                  `protobuf:"varint,6,opt,name=quota_before,json=quotaBefore,proto3" json:"quota_before,omitempty"`
	QuotaAfter  int64                  `protobuf:"varint,7,opt,name=quota_after,json=quotaAfter,proto3" json:"quota_after,omitempty"`
	Source      string                 `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	Description string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	Metadata    string                 `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TenantId    string                 `protobuf:"bytes,12,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId      uint32                 `protobuf:"varint,13,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QuotaUsage) Reset() {
	*x = QuotaUsage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaUsage) ProtoMessage() {}

func (x *QuotaUsage) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaUsage.ProtoReflect.Descriptor instead.
func (*QuotaUsage) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{1}
}

func (x *QuotaUsage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuotaUsage) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QuotaUsage) GetQuotaId() uint32 {
	if x != nil {
		return x.QuotaId
	}
	return 0
}

func (x *QuotaUsage) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *QuotaUsage) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QuotaUsage) GetQuotaBefore() int64 {
	if x != nil {
		return x.QuotaBefore
	}
	return 0
}

func (x *QuotaUsage) GetQuotaAfter() int64 {
	if x != nil {
		return x.QuotaAfter
	}
	return 0
}

func (x *QuotaUsage) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *QuotaUsage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuotaUsage) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *QuotaUsage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QuotaUsage) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *QuotaUsage) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QuotaAlert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid              string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	QuotaId           uint32                 `protobuf:"varint,3,opt,name=quota_id,json=quotaId,proto3" json:"quota_id,omitempty"`
	AlertType         AlertType              `protobuf:"varint,4,opt,name=alert_type,json=alertType,proto3,enum=quota.AlertType" json:"alert_type,omitempty"`
	Status            AlertStatus            `protobuf:"varint,5,opt,name=status,proto3,enum=quota.AlertStatus" json:"status,omitempty"`
	Message           string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	Threshold         float64                `protobuf:"fixed64,7,opt,name=threshold,proto3" json:"threshold,omitempty"`
	CurrentUsage      float64                `protobuf:"fixed64,8,opt,name=current_usage,json=currentUsage,proto3" json:"current_usage,omitempty"`
	CurrentUsageBytes int64                  `protobuf:"varint,9,opt,name=current_usage_bytes,json=currentUsageBytes,proto3" json:"current_usage_bytes,omitempty"`
	Metadata          string                 `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TriggeredAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=triggered_at,json=triggeredAt,proto3" json:"triggered_at,omitempty"`
	ReadAt            *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	ResolvedAt        *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=resolved_at,json=resolvedAt,proto3" json:"resolved_at,omitempty"`
	TenantId          string                 `protobuf:"bytes,14,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId            uint32                 `protobuf:"varint,15,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *QuotaAlert) Reset() {
	*x = QuotaAlert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaAlert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaAlert) ProtoMessage() {}

func (x *QuotaAlert) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaAlert.ProtoReflect.Descriptor instead.
func (*QuotaAlert) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{2}
}

func (x *QuotaAlert) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuotaAlert) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QuotaAlert) GetQuotaId() uint32 {
	if x != nil {
		return x.QuotaId
	}
	return 0
}

func (x *QuotaAlert) GetAlertType() AlertType {
	if x != nil {
		return x.AlertType
	}
	return AlertType_ALERT_TYPE_WARNING
}

func (x *QuotaAlert) GetStatus() AlertStatus {
	if x != nil {
		return x.Status
	}
	return AlertStatus_ALERT_STATUS_UNREAD
}

func (x *QuotaAlert) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *QuotaAlert) GetThreshold() float64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *QuotaAlert) GetCurrentUsage() float64 {
	if x != nil {
		return x.CurrentUsage
	}
	return 0
}

func (x *QuotaAlert) GetCurrentUsageBytes() int64 {
	if x != nil {
		return x.CurrentUsageBytes
	}
	return 0
}

func (x *QuotaAlert) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *QuotaAlert) GetTriggeredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TriggeredAt
	}
	return nil
}

func (x *QuotaAlert) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *QuotaAlert) GetResolvedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ResolvedAt
	}
	return nil
}

func (x *QuotaAlert) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *QuotaAlert) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type QuotaHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uuid        string                 `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty"`
	QuotaId     uint32                 `protobuf:"varint,3,opt,name=quota_id,json=quotaId,proto3" json:"quota_id,omitempty"`
	Action      ActionType             `protobuf:"varint,4,opt,name=action,proto3,enum=quota.ActionType" json:"action,omitempty"`
	Amount      int64                  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	QuotaBefore int64                  `protobuf:"varint,6,opt,name=quota_before,json=quotaBefore,proto3" json:"quota_before,omitempty"`
	QuotaAfter  int64                  `protobuf:"varint,7,opt,name=quota_after,json=quotaAfter,proto3" json:"quota_after,omitempty"`
	Description string                 `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Metadata    string                 `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TenantId    string                 `protobuf:"bytes,11,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId      uint32                 `protobuf:"varint,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PerformedBy uint32                 `protobuf:"varint,13,opt,name=performed_by,json=performedBy,proto3" json:"performed_by,omitempty"`
}

func (x *QuotaHistory) Reset() {
	*x = QuotaHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaHistory) ProtoMessage() {}

func (x *QuotaHistory) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaHistory.ProtoReflect.Descriptor instead.
func (*QuotaHistory) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{3}
}

func (x *QuotaHistory) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QuotaHistory) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *QuotaHistory) GetQuotaId() uint32 {
	if x != nil {
		return x.QuotaId
	}
	return 0
}

func (x *QuotaHistory) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_ALLOCATED
}

func (x *QuotaHistory) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *QuotaHistory) GetQuotaBefore() int64 {
	if x != nil {
		return x.QuotaBefore
	}
	return 0
}

func (x *QuotaHistory) GetQuotaAfter() int64 {
	if x != nil {
		return x.QuotaAfter
	}
	return 0
}

func (x *QuotaHistory) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *QuotaHistory) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *QuotaHistory) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *QuotaHistory) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *QuotaHistory) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QuotaHistory) GetPerformedBy() uint32 {
	if x != nil {
		return x.PerformedBy
	}
	return 0
}

// Storage Quota Requests/Responses
type CreateStorageQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            uint32                 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId          string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	TotalQuota        int64                  `protobuf:"varint,3,opt,name=total_quota,json=totalQuota,proto3" json:"total_quota,omitempty"`
	WarningThreshold  float64                `protobuf:"fixed64,4,opt,name=warning_threshold,json=warningThreshold,proto3" json:"warning_threshold,omitempty"`
	CriticalThreshold float64                `protobuf:"fixed64,5,opt,name=critical_threshold,json=criticalThreshold,proto3" json:"critical_threshold,omitempty"`
	AutoExpand        bool                   `protobuf:"varint,6,opt,name=auto_expand,json=autoExpand,proto3" json:"auto_expand,omitempty"`
	MaxExpansion      int64                  `protobuf:"varint,7,opt,name=max_expansion,json=maxExpansion,proto3" json:"max_expansion,omitempty"`
	ExpiresAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	IsUnlimited       bool                   `protobuf:"varint,9,opt,name=is_unlimited,json=isUnlimited,proto3" json:"is_unlimited,omitempty"`
	Metadata          string                 `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedBy         uint32                 `protobuf:"varint,11,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
}

func (x *CreateStorageQuotaRequest) Reset() {
	*x = CreateStorageQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageQuotaRequest) ProtoMessage() {}

func (x *CreateStorageQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageQuotaRequest.ProtoReflect.Descriptor instead.
func (*CreateStorageQuotaRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{4}
}

func (x *CreateStorageQuotaRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateStorageQuotaRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *CreateStorageQuotaRequest) GetTotalQuota() int64 {
	if x != nil {
		return x.TotalQuota
	}
	return 0
}

func (x *CreateStorageQuotaRequest) GetWarningThreshold() float64 {
	if x != nil {
		return x.WarningThreshold
	}
	return 0
}

func (x *CreateStorageQuotaRequest) GetCriticalThreshold() float64 {
	if x != nil {
		return x.CriticalThreshold
	}
	return 0
}

func (x *CreateStorageQuotaRequest) GetAutoExpand() bool {
	if x != nil {
		return x.AutoExpand
	}
	return false
}

func (x *CreateStorageQuotaRequest) GetMaxExpansion() int64 {
	if x != nil {
		return x.MaxExpansion
	}
	return 0
}

func (x *CreateStorageQuotaRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *CreateStorageQuotaRequest) GetIsUnlimited() bool {
	if x != nil {
		return x.IsUnlimited
	}
	return false
}

func (x *CreateStorageQuotaRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *CreateStorageQuotaRequest) GetCreatedBy() uint32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

type CreateStorageQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Quota   *StorageQuota `protobuf:"bytes,3,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *CreateStorageQuotaResponse) Reset() {
	*x = CreateStorageQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStorageQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStorageQuotaResponse) ProtoMessage() {}

func (x *CreateStorageQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStorageQuotaResponse.ProtoReflect.Descriptor instead.
func (*CreateStorageQuotaResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{5}
}

func (x *CreateStorageQuotaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateStorageQuotaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateStorageQuotaResponse) GetQuota() *StorageQuota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type GetStorageQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*GetStorageQuotaRequest_Id
	//	*GetStorageQuotaRequest_Uuid
	Identifier isGetStorageQuotaRequest_Identifier `protobuf_oneof:"identifier"`
	TenantId   string                              `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *GetStorageQuotaRequest) Reset() {
	*x = GetStorageQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageQuotaRequest) ProtoMessage() {}

func (x *GetStorageQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageQuotaRequest.ProtoReflect.Descriptor instead.
func (*GetStorageQuotaRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{6}
}

func (m *GetStorageQuotaRequest) GetIdentifier() isGetStorageQuotaRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *GetStorageQuotaRequest) GetId() uint32 {
	if x, ok := x.GetIdentifier().(*GetStorageQuotaRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *GetStorageQuotaRequest) GetUuid() string {
	if x, ok := x.GetIdentifier().(*GetStorageQuotaRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *GetStorageQuotaRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type isGetStorageQuotaRequest_Identifier interface {
	isGetStorageQuotaRequest_Identifier()
}

type GetStorageQuotaRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type GetStorageQuotaRequest_Uuid struct {
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

func (*GetStorageQuotaRequest_Id) isGetStorageQuotaRequest_Identifier() {}

func (*GetStorageQuotaRequest_Uuid) isGetStorageQuotaRequest_Identifier() {}

type GetStorageQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Quota   *StorageQuota `protobuf:"bytes,3,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *GetStorageQuotaResponse) Reset() {
	*x = GetStorageQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStorageQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStorageQuotaResponse) ProtoMessage() {}

func (x *GetStorageQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStorageQuotaResponse.ProtoReflect.Descriptor instead.
func (*GetStorageQuotaResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{7}
}

func (x *GetStorageQuotaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetStorageQuotaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetStorageQuotaResponse) GetQuota() *StorageQuota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type UpdateStorageQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*UpdateStorageQuotaRequest_Id
	//	*UpdateStorageQuotaRequest_Uuid
	Identifier        isUpdateStorageQuotaRequest_Identifier `protobuf_oneof:"identifier"`
	TenantId          string                                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	TotalQuota        *int64                                 `protobuf:"varint,4,opt,name=total_quota,json=totalQuota,proto3,oneof" json:"total_quota,omitempty"`
	WarningThreshold  *float64                               `protobuf:"fixed64,5,opt,name=warning_threshold,json=warningThreshold,proto3,oneof" json:"warning_threshold,omitempty"`
	CriticalThreshold *float64                               `protobuf:"fixed64,6,opt,name=critical_threshold,json=criticalThreshold,proto3,oneof" json:"critical_threshold,omitempty"`
	AutoExpand        *bool                                  `protobuf:"varint,7,opt,name=auto_expand,json=autoExpand,proto3,oneof" json:"auto_expand,omitempty"`
	MaxExpansion      *int64                                 `protobuf:"varint,8,opt,name=max_expansion,json=maxExpansion,proto3,oneof" json:"max_expansion,omitempty"`
	ExpiresAt         *timestamppb.Timestamp                 `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	IsUnlimited       *bool                                  `protobuf:"varint,10,opt,name=is_unlimited,json=isUnlimited,proto3,oneof" json:"is_unlimited,omitempty"`
	IsActive          *bool                                  `protobuf:"varint,11,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	Metadata          *string                                `protobuf:"bytes,12,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	UpdatedBy         uint32                                 `protobuf:"varint,13,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *UpdateStorageQuotaRequest) Reset() {
	*x = UpdateStorageQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStorageQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStorageQuotaRequest) ProtoMessage() {}

func (x *UpdateStorageQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStorageQuotaRequest.ProtoReflect.Descriptor instead.
func (*UpdateStorageQuotaRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{8}
}

func (m *UpdateStorageQuotaRequest) GetIdentifier() isUpdateStorageQuotaRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *UpdateStorageQuotaRequest) GetId() uint32 {
	if x, ok := x.GetIdentifier().(*UpdateStorageQuotaRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *UpdateStorageQuotaRequest) GetUuid() string {
	if x, ok := x.GetIdentifier().(*UpdateStorageQuotaRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *UpdateStorageQuotaRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateStorageQuotaRequest) GetTotalQuota() int64 {
	if x != nil && x.TotalQuota != nil {
		return *x.TotalQuota
	}
	return 0
}

func (x *UpdateStorageQuotaRequest) GetWarningThreshold() float64 {
	if x != nil && x.WarningThreshold != nil {
		return *x.WarningThreshold
	}
	return 0
}

func (x *UpdateStorageQuotaRequest) GetCriticalThreshold() float64 {
	if x != nil && x.CriticalThreshold != nil {
		return *x.CriticalThreshold
	}
	return 0
}

func (x *UpdateStorageQuotaRequest) GetAutoExpand() bool {
	if x != nil && x.AutoExpand != nil {
		return *x.AutoExpand
	}
	return false
}

func (x *UpdateStorageQuotaRequest) GetMaxExpansion() int64 {
	if x != nil && x.MaxExpansion != nil {
		return *x.MaxExpansion
	}
	return 0
}

func (x *UpdateStorageQuotaRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UpdateStorageQuotaRequest) GetIsUnlimited() bool {
	if x != nil && x.IsUnlimited != nil {
		return *x.IsUnlimited
	}
	return false
}

func (x *UpdateStorageQuotaRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *UpdateStorageQuotaRequest) GetMetadata() string {
	if x != nil && x.Metadata != nil {
		return *x.Metadata
	}
	return ""
}

func (x *UpdateStorageQuotaRequest) GetUpdatedBy() uint32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

type isUpdateStorageQuotaRequest_Identifier interface {
	isUpdateStorageQuotaRequest_Identifier()
}

type UpdateStorageQuotaRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type UpdateStorageQuotaRequest_Uuid struct {
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

func (*UpdateStorageQuotaRequest_Id) isUpdateStorageQuotaRequest_Identifier() {}

func (*UpdateStorageQuotaRequest_Uuid) isUpdateStorageQuotaRequest_Identifier() {}

type UpdateStorageQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Quota   *StorageQuota `protobuf:"bytes,3,opt,name=quota,proto3" json:"quota,omitempty"`
}

func (x *UpdateStorageQuotaResponse) Reset() {
	*x = UpdateStorageQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStorageQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStorageQuotaResponse) ProtoMessage() {}

func (x *UpdateStorageQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStorageQuotaResponse.ProtoReflect.Descriptor instead.
func (*UpdateStorageQuotaResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateStorageQuotaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateStorageQuotaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateStorageQuotaResponse) GetQuota() *StorageQuota {
	if x != nil {
		return x.Quota
	}
	return nil
}

type DeleteStorageQuotaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*DeleteStorageQuotaRequest_Id
	//	*DeleteStorageQuotaRequest_Uuid
	Identifier isDeleteStorageQuotaRequest_Identifier `protobuf_oneof:"identifier"`
	TenantId   string                                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *DeleteStorageQuotaRequest) Reset() {
	*x = DeleteStorageQuotaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStorageQuotaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageQuotaRequest) ProtoMessage() {}

func (x *DeleteStorageQuotaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageQuotaRequest.ProtoReflect.Descriptor instead.
func (*DeleteStorageQuotaRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{10}
}

func (m *DeleteStorageQuotaRequest) GetIdentifier() isDeleteStorageQuotaRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *DeleteStorageQuotaRequest) GetId() uint32 {
	if x, ok := x.GetIdentifier().(*DeleteStorageQuotaRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *DeleteStorageQuotaRequest) GetUuid() string {
	if x, ok := x.GetIdentifier().(*DeleteStorageQuotaRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *DeleteStorageQuotaRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type isDeleteStorageQuotaRequest_Identifier interface {
	isDeleteStorageQuotaRequest_Identifier()
}

type DeleteStorageQuotaRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type DeleteStorageQuotaRequest_Uuid struct {
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

func (*DeleteStorageQuotaRequest_Id) isDeleteStorageQuotaRequest_Identifier() {}

func (*DeleteStorageQuotaRequest_Uuid) isDeleteStorageQuotaRequest_Identifier() {}

type DeleteStorageQuotaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DeleteStorageQuotaResponse) Reset() {
	*x = DeleteStorageQuotaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStorageQuotaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStorageQuotaResponse) ProtoMessage() {}

func (x *DeleteStorageQuotaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStorageQuotaResponse.ProtoReflect.Descriptor instead.
func (*DeleteStorageQuotaResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteStorageQuotaResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteStorageQuotaResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListStorageQuotasRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId    string  `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId      *uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	IsActive    *bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3,oneof" json:"is_active,omitempty"`
	IsUnlimited *bool   `protobuf:"varint,4,opt,name=is_unlimited,json=isUnlimited,proto3,oneof" json:"is_unlimited,omitempty"`
	Page        int32   `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit       int32   `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy      string  `protobuf:"bytes,7,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder   string  `protobuf:"bytes,8,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListStorageQuotasRequest) Reset() {
	*x = ListStorageQuotasRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageQuotasRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageQuotasRequest) ProtoMessage() {}

func (x *ListStorageQuotasRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageQuotasRequest.ProtoReflect.Descriptor instead.
func (*ListStorageQuotasRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{12}
}

func (x *ListStorageQuotasRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListStorageQuotasRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListStorageQuotasRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *ListStorageQuotasRequest) GetIsUnlimited() bool {
	if x != nil && x.IsUnlimited != nil {
		return *x.IsUnlimited
	}
	return false
}

func (x *ListStorageQuotasRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStorageQuotasRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListStorageQuotasRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListStorageQuotasRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListStorageQuotasResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Quotas  []*StorageQuota `protobuf:"bytes,3,rep,name=quotas,proto3" json:"quotas,omitempty"`
	Total   int64           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page    int32           `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32           `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListStorageQuotasResponse) Reset() {
	*x = ListStorageQuotasResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStorageQuotasResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStorageQuotasResponse) ProtoMessage() {}

func (x *ListStorageQuotasResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStorageQuotasResponse.ProtoReflect.Descriptor instead.
func (*ListStorageQuotasResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{13}
}

func (x *ListStorageQuotasResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListStorageQuotasResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListStorageQuotasResponse) GetQuotas() []*StorageQuota {
	if x != nil {
		return x.Quotas
	}
	return nil
}

func (x *ListStorageQuotasResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListStorageQuotasResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListStorageQuotasResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Quota Usage Requests/Responses
type UpdateQuotaUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QuotaIdentifier:
	//
	//	*UpdateQuotaUsageRequest_QuotaId
	//	*UpdateQuotaUsageRequest_QuotaUuid
	QuotaIdentifier isUpdateQuotaUsageRequest_QuotaIdentifier `protobuf_oneof:"quota_identifier"`
	TenantId        string                                    `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId          uint32                                    `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Operation       string                                    `protobuf:"bytes,5,opt,name=operation,proto3" json:"operation,omitempty"`
	Amount          int64                                     `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Source          string                                    `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Description     string                                    `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	Metadata        string                                    `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *UpdateQuotaUsageRequest) Reset() {
	*x = UpdateQuotaUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuotaUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuotaUsageRequest) ProtoMessage() {}

func (x *UpdateQuotaUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuotaUsageRequest.ProtoReflect.Descriptor instead.
func (*UpdateQuotaUsageRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{14}
}

func (m *UpdateQuotaUsageRequest) GetQuotaIdentifier() isUpdateQuotaUsageRequest_QuotaIdentifier {
	if m != nil {
		return m.QuotaIdentifier
	}
	return nil
}

func (x *UpdateQuotaUsageRequest) GetQuotaId() uint32 {
	if x, ok := x.GetQuotaIdentifier().(*UpdateQuotaUsageRequest_QuotaId); ok {
		return x.QuotaId
	}
	return 0
}

func (x *UpdateQuotaUsageRequest) GetQuotaUuid() string {
	if x, ok := x.GetQuotaIdentifier().(*UpdateQuotaUsageRequest_QuotaUuid); ok {
		return x.QuotaUuid
	}
	return ""
}

func (x *UpdateQuotaUsageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *UpdateQuotaUsageRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateQuotaUsageRequest) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *UpdateQuotaUsageRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateQuotaUsageRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UpdateQuotaUsageRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateQuotaUsageRequest) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

type isUpdateQuotaUsageRequest_QuotaIdentifier interface {
	isUpdateQuotaUsageRequest_QuotaIdentifier()
}

type UpdateQuotaUsageRequest_QuotaId struct {
	QuotaId uint32 `protobuf:"varint,1,opt,name=quota_id,json=quotaId,proto3,oneof"`
}

type UpdateQuotaUsageRequest_QuotaUuid struct {
	QuotaUuid string `protobuf:"bytes,2,opt,name=quota_uuid,json=quotaUuid,proto3,oneof"`
}

func (*UpdateQuotaUsageRequest_QuotaId) isUpdateQuotaUsageRequest_QuotaIdentifier() {}

func (*UpdateQuotaUsageRequest_QuotaUuid) isUpdateQuotaUsageRequest_QuotaIdentifier() {}

type UpdateQuotaUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success         bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Usage           *QuotaUsage   `protobuf:"bytes,3,opt,name=usage,proto3" json:"usage,omitempty"`
	UpdatedQuota    *StorageQuota `protobuf:"bytes,4,opt,name=updated_quota,json=updatedQuota,proto3" json:"updated_quota,omitempty"`
	TriggeredAlerts []*QuotaAlert `protobuf:"bytes,5,rep,name=triggered_alerts,json=triggeredAlerts,proto3" json:"triggered_alerts,omitempty"`
}

func (x *UpdateQuotaUsageResponse) Reset() {
	*x = UpdateQuotaUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateQuotaUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateQuotaUsageResponse) ProtoMessage() {}

func (x *UpdateQuotaUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateQuotaUsageResponse.ProtoReflect.Descriptor instead.
func (*UpdateQuotaUsageResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateQuotaUsageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateQuotaUsageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateQuotaUsageResponse) GetUsage() *QuotaUsage {
	if x != nil {
		return x.Usage
	}
	return nil
}

func (x *UpdateQuotaUsageResponse) GetUpdatedQuota() *StorageQuota {
	if x != nil {
		return x.UpdatedQuota
	}
	return nil
}

func (x *UpdateQuotaUsageResponse) GetTriggeredAlerts() []*QuotaAlert {
	if x != nil {
		return x.TriggeredAlerts
	}
	return nil
}

type GetQuotaUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QuotaIdentifier:
	//
	//	*GetQuotaUsageRequest_QuotaId
	//	*GetQuotaUsageRequest_QuotaUuid
	QuotaIdentifier isGetQuotaUsageRequest_QuotaIdentifier `protobuf_oneof:"quota_identifier"`
	TenantId        string                                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	StartDate       *timestamppb.Timestamp                 `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         *timestamppb.Timestamp                 `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetQuotaUsageRequest) Reset() {
	*x = GetQuotaUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaUsageRequest) ProtoMessage() {}

func (x *GetQuotaUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaUsageRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaUsageRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{16}
}

func (m *GetQuotaUsageRequest) GetQuotaIdentifier() isGetQuotaUsageRequest_QuotaIdentifier {
	if m != nil {
		return m.QuotaIdentifier
	}
	return nil
}

func (x *GetQuotaUsageRequest) GetQuotaId() uint32 {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaUsageRequest_QuotaId); ok {
		return x.QuotaId
	}
	return 0
}

func (x *GetQuotaUsageRequest) GetQuotaUuid() string {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaUsageRequest_QuotaUuid); ok {
		return x.QuotaUuid
	}
	return ""
}

func (x *GetQuotaUsageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetQuotaUsageRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetQuotaUsageRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type isGetQuotaUsageRequest_QuotaIdentifier interface {
	isGetQuotaUsageRequest_QuotaIdentifier()
}

type GetQuotaUsageRequest_QuotaId struct {
	QuotaId uint32 `protobuf:"varint,1,opt,name=quota_id,json=quotaId,proto3,oneof"`
}

type GetQuotaUsageRequest_QuotaUuid struct {
	QuotaUuid string `protobuf:"bytes,2,opt,name=quota_uuid,json=quotaUuid,proto3,oneof"`
}

func (*GetQuotaUsageRequest_QuotaId) isGetQuotaUsageRequest_QuotaIdentifier() {}

func (*GetQuotaUsageRequest_QuotaUuid) isGetQuotaUsageRequest_QuotaIdentifier() {}

type GetQuotaUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UsageRecords []*QuotaUsage `protobuf:"bytes,3,rep,name=usage_records,json=usageRecords,proto3" json:"usage_records,omitempty"`
	TotalUsage   int64         `protobuf:"varint,4,opt,name=total_usage,json=totalUsage,proto3" json:"total_usage,omitempty"`
	TotalRecords int64         `protobuf:"varint,5,opt,name=total_records,json=totalRecords,proto3" json:"total_records,omitempty"`
}

func (x *GetQuotaUsageResponse) Reset() {
	*x = GetQuotaUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaUsageResponse) ProtoMessage() {}

func (x *GetQuotaUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaUsageResponse.ProtoReflect.Descriptor instead.
func (*GetQuotaUsageResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{17}
}

func (x *GetQuotaUsageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQuotaUsageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQuotaUsageResponse) GetUsageRecords() []*QuotaUsage {
	if x != nil {
		return x.UsageRecords
	}
	return nil
}

func (x *GetQuotaUsageResponse) GetTotalUsage() int64 {
	if x != nil {
		return x.TotalUsage
	}
	return 0
}

func (x *GetQuotaUsageResponse) GetTotalRecords() int64 {
	if x != nil {
		return x.TotalRecords
	}
	return 0
}

type ListQuotaUsageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId  string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId    *uint32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	QuotaId   *uint32                `protobuf:"varint,3,opt,name=quota_id,json=quotaId,proto3,oneof" json:"quota_id,omitempty"`
	Operation *string                `protobuf:"bytes,4,opt,name=operation,proto3,oneof" json:"operation,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Page      int32                  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string                 `protobuf:"bytes,9,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string                 `protobuf:"bytes,10,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListQuotaUsageRequest) Reset() {
	*x = ListQuotaUsageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaUsageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaUsageRequest) ProtoMessage() {}

func (x *ListQuotaUsageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaUsageRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaUsageRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{18}
}

func (x *ListQuotaUsageRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListQuotaUsageRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListQuotaUsageRequest) GetQuotaId() uint32 {
	if x != nil && x.QuotaId != nil {
		return *x.QuotaId
	}
	return 0
}

func (x *ListQuotaUsageRequest) GetOperation() string {
	if x != nil && x.Operation != nil {
		return *x.Operation
	}
	return ""
}

func (x *ListQuotaUsageRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListQuotaUsageRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListQuotaUsageRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaUsageRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuotaUsageRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListQuotaUsageRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListQuotaUsageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success      bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message      string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UsageRecords []*QuotaUsage `protobuf:"bytes,3,rep,name=usage_records,json=usageRecords,proto3" json:"usage_records,omitempty"`
	Total        int64         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page         int32         `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit        int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListQuotaUsageResponse) Reset() {
	*x = ListQuotaUsageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaUsageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaUsageResponse) ProtoMessage() {}

func (x *ListQuotaUsageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaUsageResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaUsageResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{19}
}

func (x *ListQuotaUsageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListQuotaUsageResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListQuotaUsageResponse) GetUsageRecords() []*QuotaUsage {
	if x != nil {
		return x.UsageRecords
	}
	return nil
}

func (x *ListQuotaUsageResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListQuotaUsageResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaUsageResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Quota Alert Requests/Responses
type GetQuotaAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QuotaIdentifier:
	//
	//	*GetQuotaAlertsRequest_QuotaId
	//	*GetQuotaAlertsRequest_QuotaUuid
	QuotaIdentifier isGetQuotaAlertsRequest_QuotaIdentifier `protobuf_oneof:"quota_identifier"`
	TenantId        string                                  `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Status          *AlertStatus                            `protobuf:"varint,4,opt,name=status,proto3,enum=quota.AlertStatus,oneof" json:"status,omitempty"`
	AlertType       *AlertType                              `protobuf:"varint,5,opt,name=alert_type,json=alertType,proto3,enum=quota.AlertType,oneof" json:"alert_type,omitempty"`
}

func (x *GetQuotaAlertsRequest) Reset() {
	*x = GetQuotaAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaAlertsRequest) ProtoMessage() {}

func (x *GetQuotaAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaAlertsRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaAlertsRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{20}
}

func (m *GetQuotaAlertsRequest) GetQuotaIdentifier() isGetQuotaAlertsRequest_QuotaIdentifier {
	if m != nil {
		return m.QuotaIdentifier
	}
	return nil
}

func (x *GetQuotaAlertsRequest) GetQuotaId() uint32 {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaAlertsRequest_QuotaId); ok {
		return x.QuotaId
	}
	return 0
}

func (x *GetQuotaAlertsRequest) GetQuotaUuid() string {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaAlertsRequest_QuotaUuid); ok {
		return x.QuotaUuid
	}
	return ""
}

func (x *GetQuotaAlertsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetQuotaAlertsRequest) GetStatus() AlertStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return AlertStatus_ALERT_STATUS_UNREAD
}

func (x *GetQuotaAlertsRequest) GetAlertType() AlertType {
	if x != nil && x.AlertType != nil {
		return *x.AlertType
	}
	return AlertType_ALERT_TYPE_WARNING
}

type isGetQuotaAlertsRequest_QuotaIdentifier interface {
	isGetQuotaAlertsRequest_QuotaIdentifier()
}

type GetQuotaAlertsRequest_QuotaId struct {
	QuotaId uint32 `protobuf:"varint,1,opt,name=quota_id,json=quotaId,proto3,oneof"`
}

type GetQuotaAlertsRequest_QuotaUuid struct {
	QuotaUuid string `protobuf:"bytes,2,opt,name=quota_uuid,json=quotaUuid,proto3,oneof"`
}

func (*GetQuotaAlertsRequest_QuotaId) isGetQuotaAlertsRequest_QuotaIdentifier() {}

func (*GetQuotaAlertsRequest_QuotaUuid) isGetQuotaAlertsRequest_QuotaIdentifier() {}

type GetQuotaAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Alerts  []*QuotaAlert `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Total   int64         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetQuotaAlertsResponse) Reset() {
	*x = GetQuotaAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaAlertsResponse) ProtoMessage() {}

func (x *GetQuotaAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaAlertsResponse.ProtoReflect.Descriptor instead.
func (*GetQuotaAlertsResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{21}
}

func (x *GetQuotaAlertsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQuotaAlertsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQuotaAlertsResponse) GetAlerts() []*QuotaAlert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *GetQuotaAlertsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type MarkAlertAsReadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Identifier:
	//
	//	*MarkAlertAsReadRequest_Id
	//	*MarkAlertAsReadRequest_Uuid
	Identifier isMarkAlertAsReadRequest_Identifier `protobuf_oneof:"identifier"`
	TenantId   string                              `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *MarkAlertAsReadRequest) Reset() {
	*x = MarkAlertAsReadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAlertAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAlertAsReadRequest) ProtoMessage() {}

func (x *MarkAlertAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAlertAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAlertAsReadRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{22}
}

func (m *MarkAlertAsReadRequest) GetIdentifier() isMarkAlertAsReadRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *MarkAlertAsReadRequest) GetId() uint32 {
	if x, ok := x.GetIdentifier().(*MarkAlertAsReadRequest_Id); ok {
		return x.Id
	}
	return 0
}

func (x *MarkAlertAsReadRequest) GetUuid() string {
	if x, ok := x.GetIdentifier().(*MarkAlertAsReadRequest_Uuid); ok {
		return x.Uuid
	}
	return ""
}

func (x *MarkAlertAsReadRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type isMarkAlertAsReadRequest_Identifier interface {
	isMarkAlertAsReadRequest_Identifier()
}

type MarkAlertAsReadRequest_Id struct {
	Id uint32 `protobuf:"varint,1,opt,name=id,proto3,oneof"`
}

type MarkAlertAsReadRequest_Uuid struct {
	Uuid string `protobuf:"bytes,2,opt,name=uuid,proto3,oneof"`
}

func (*MarkAlertAsReadRequest_Id) isMarkAlertAsReadRequest_Identifier() {}

func (*MarkAlertAsReadRequest_Uuid) isMarkAlertAsReadRequest_Identifier() {}

type MarkAlertAsReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Alert   *QuotaAlert `protobuf:"bytes,3,opt,name=alert,proto3" json:"alert,omitempty"`
}

func (x *MarkAlertAsReadResponse) Reset() {
	*x = MarkAlertAsReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarkAlertAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAlertAsReadResponse) ProtoMessage() {}

func (x *MarkAlertAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAlertAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAlertAsReadResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{23}
}

func (x *MarkAlertAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkAlertAsReadResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MarkAlertAsReadResponse) GetAlert() *QuotaAlert {
	if x != nil {
		return x.Alert
	}
	return nil
}

type ListQuotaAlertsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId  string       `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId    *uint32      `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	Status    *AlertStatus `protobuf:"varint,3,opt,name=status,proto3,enum=quota.AlertStatus,oneof" json:"status,omitempty"`
	AlertType *AlertType   `protobuf:"varint,4,opt,name=alert_type,json=alertType,proto3,enum=quota.AlertType,oneof" json:"alert_type,omitempty"`
	Page      int32        `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32        `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string       `protobuf:"bytes,7,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string       `protobuf:"bytes,8,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListQuotaAlertsRequest) Reset() {
	*x = ListQuotaAlertsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaAlertsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaAlertsRequest) ProtoMessage() {}

func (x *ListQuotaAlertsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaAlertsRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaAlertsRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{24}
}

func (x *ListQuotaAlertsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListQuotaAlertsRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListQuotaAlertsRequest) GetStatus() AlertStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return AlertStatus_ALERT_STATUS_UNREAD
}

func (x *ListQuotaAlertsRequest) GetAlertType() AlertType {
	if x != nil && x.AlertType != nil {
		return *x.AlertType
	}
	return AlertType_ALERT_TYPE_WARNING
}

func (x *ListQuotaAlertsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaAlertsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuotaAlertsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListQuotaAlertsRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListQuotaAlertsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool          `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Alerts  []*QuotaAlert `protobuf:"bytes,3,rep,name=alerts,proto3" json:"alerts,omitempty"`
	Total   int64         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page    int32         `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32         `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListQuotaAlertsResponse) Reset() {
	*x = ListQuotaAlertsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaAlertsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaAlertsResponse) ProtoMessage() {}

func (x *ListQuotaAlertsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaAlertsResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaAlertsResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{25}
}

func (x *ListQuotaAlertsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListQuotaAlertsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListQuotaAlertsResponse) GetAlerts() []*QuotaAlert {
	if x != nil {
		return x.Alerts
	}
	return nil
}

func (x *ListQuotaAlertsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListQuotaAlertsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaAlertsResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Quota History Requests/Responses
type GetQuotaHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QuotaIdentifier:
	//
	//	*GetQuotaHistoryRequest_QuotaId
	//	*GetQuotaHistoryRequest_QuotaUuid
	QuotaIdentifier isGetQuotaHistoryRequest_QuotaIdentifier `protobuf_oneof:"quota_identifier"`
	TenantId        string                                   `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	StartDate       *timestamppb.Timestamp                   `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         *timestamppb.Timestamp                   `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Action          *ActionType                              `protobuf:"varint,6,opt,name=action,proto3,enum=quota.ActionType,oneof" json:"action,omitempty"`
}

func (x *GetQuotaHistoryRequest) Reset() {
	*x = GetQuotaHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaHistoryRequest) ProtoMessage() {}

func (x *GetQuotaHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaHistoryRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{26}
}

func (m *GetQuotaHistoryRequest) GetQuotaIdentifier() isGetQuotaHistoryRequest_QuotaIdentifier {
	if m != nil {
		return m.QuotaIdentifier
	}
	return nil
}

func (x *GetQuotaHistoryRequest) GetQuotaId() uint32 {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaHistoryRequest_QuotaId); ok {
		return x.QuotaId
	}
	return 0
}

func (x *GetQuotaHistoryRequest) GetQuotaUuid() string {
	if x, ok := x.GetQuotaIdentifier().(*GetQuotaHistoryRequest_QuotaUuid); ok {
		return x.QuotaUuid
	}
	return ""
}

func (x *GetQuotaHistoryRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetQuotaHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetQuotaHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *GetQuotaHistoryRequest) GetAction() ActionType {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ActionType_ACTION_TYPE_ALLOCATED
}

type isGetQuotaHistoryRequest_QuotaIdentifier interface {
	isGetQuotaHistoryRequest_QuotaIdentifier()
}

type GetQuotaHistoryRequest_QuotaId struct {
	QuotaId uint32 `protobuf:"varint,1,opt,name=quota_id,json=quotaId,proto3,oneof"`
}

type GetQuotaHistoryRequest_QuotaUuid struct {
	QuotaUuid string `protobuf:"bytes,2,opt,name=quota_uuid,json=quotaUuid,proto3,oneof"`
}

func (*GetQuotaHistoryRequest_QuotaId) isGetQuotaHistoryRequest_QuotaIdentifier() {}

func (*GetQuotaHistoryRequest_QuotaUuid) isGetQuotaHistoryRequest_QuotaIdentifier() {}

type GetQuotaHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	History []*QuotaHistory `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`
	Total   int64           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetQuotaHistoryResponse) Reset() {
	*x = GetQuotaHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaHistoryResponse) ProtoMessage() {}

func (x *GetQuotaHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetQuotaHistoryResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{27}
}

func (x *GetQuotaHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQuotaHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQuotaHistoryResponse) GetHistory() []*QuotaHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *GetQuotaHistoryResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListQuotaHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId  string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId    *uint32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	QuotaId   *uint32                `protobuf:"varint,3,opt,name=quota_id,json=quotaId,proto3,oneof" json:"quota_id,omitempty"`
	Action    *ActionType            `protobuf:"varint,4,opt,name=action,proto3,enum=quota.ActionType,oneof" json:"action,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Page      int32                  `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	Limit     int32                  `protobuf:"varint,8,opt,name=limit,proto3" json:"limit,omitempty"`
	SortBy    string                 `protobuf:"bytes,9,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	SortOrder string                 `protobuf:"bytes,10,opt,name=sort_order,json=sortOrder,proto3" json:"sort_order,omitempty"`
}

func (x *ListQuotaHistoryRequest) Reset() {
	*x = ListQuotaHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaHistoryRequest) ProtoMessage() {}

func (x *ListQuotaHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaHistoryRequest.ProtoReflect.Descriptor instead.
func (*ListQuotaHistoryRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{28}
}

func (x *ListQuotaHistoryRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ListQuotaHistoryRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *ListQuotaHistoryRequest) GetQuotaId() uint32 {
	if x != nil && x.QuotaId != nil {
		return *x.QuotaId
	}
	return 0
}

func (x *ListQuotaHistoryRequest) GetAction() ActionType {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ActionType_ACTION_TYPE_ALLOCATED
}

func (x *ListQuotaHistoryRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ListQuotaHistoryRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ListQuotaHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListQuotaHistoryRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListQuotaHistoryRequest) GetSortOrder() string {
	if x != nil {
		return x.SortOrder
	}
	return ""
}

type ListQuotaHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool            `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	History []*QuotaHistory `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`
	Total   int64           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page    int32           `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int32           `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListQuotaHistoryResponse) Reset() {
	*x = ListQuotaHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListQuotaHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListQuotaHistoryResponse) ProtoMessage() {}

func (x *ListQuotaHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListQuotaHistoryResponse.ProtoReflect.Descriptor instead.
func (*ListQuotaHistoryResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{29}
}

func (x *ListQuotaHistoryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListQuotaHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListQuotaHistoryResponse) GetHistory() []*QuotaHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ListQuotaHistoryResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListQuotaHistoryResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListQuotaHistoryResponse) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Statistics Requests/Responses
type GetQuotaStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId  string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	UserId    *uint32                `protobuf:"varint,2,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetQuotaStatsRequest) Reset() {
	*x = GetQuotaStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaStatsRequest) ProtoMessage() {}

func (x *GetQuotaStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaStatsRequest.ProtoReflect.Descriptor instead.
func (*GetQuotaStatsRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{30}
}

func (x *GetQuotaStatsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetQuotaStatsRequest) GetUserId() uint32 {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return 0
}

func (x *GetQuotaStatsRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetQuotaStatsRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type QuotaStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalQuotas            int64   `protobuf:"varint,1,opt,name=total_quotas,json=totalQuotas,proto3" json:"total_quotas,omitempty"`
	ActiveQuotas           int64   `protobuf:"varint,2,opt,name=active_quotas,json=activeQuotas,proto3" json:"active_quotas,omitempty"`
	TotalAllocated         int64   `protobuf:"varint,3,opt,name=total_allocated,json=totalAllocated,proto3" json:"total_allocated,omitempty"`
	TotalUsed              int64   `protobuf:"varint,4,opt,name=total_used,json=totalUsed,proto3" json:"total_used,omitempty"`
	TotalAvailable         int64   `protobuf:"varint,5,opt,name=total_available,json=totalAvailable,proto3" json:"total_available,omitempty"`
	AverageUsagePercentage float64 `protobuf:"fixed64,6,opt,name=average_usage_percentage,json=averageUsagePercentage,proto3" json:"average_usage_percentage,omitempty"`
	QuotasOverWarning      int64   `protobuf:"varint,7,opt,name=quotas_over_warning,json=quotasOverWarning,proto3" json:"quotas_over_warning,omitempty"`
	QuotasOverCritical     int64   `protobuf:"varint,8,opt,name=quotas_over_critical,json=quotasOverCritical,proto3" json:"quotas_over_critical,omitempty"`
	ExpiredQuotas          int64   `protobuf:"varint,9,opt,name=expired_quotas,json=expiredQuotas,proto3" json:"expired_quotas,omitempty"`
	UnlimitedQuotas        int64   `protobuf:"varint,10,opt,name=unlimited_quotas,json=unlimitedQuotas,proto3" json:"unlimited_quotas,omitempty"`
}

func (x *QuotaStats) Reset() {
	*x = QuotaStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuotaStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuotaStats) ProtoMessage() {}

func (x *QuotaStats) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuotaStats.ProtoReflect.Descriptor instead.
func (*QuotaStats) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{31}
}

func (x *QuotaStats) GetTotalQuotas() int64 {
	if x != nil {
		return x.TotalQuotas
	}
	return 0
}

func (x *QuotaStats) GetActiveQuotas() int64 {
	if x != nil {
		return x.ActiveQuotas
	}
	return 0
}

func (x *QuotaStats) GetTotalAllocated() int64 {
	if x != nil {
		return x.TotalAllocated
	}
	return 0
}

func (x *QuotaStats) GetTotalUsed() int64 {
	if x != nil {
		return x.TotalUsed
	}
	return 0
}

func (x *QuotaStats) GetTotalAvailable() int64 {
	if x != nil {
		return x.TotalAvailable
	}
	return 0
}

func (x *QuotaStats) GetAverageUsagePercentage() float64 {
	if x != nil {
		return x.AverageUsagePercentage
	}
	return 0
}

func (x *QuotaStats) GetQuotasOverWarning() int64 {
	if x != nil {
		return x.QuotasOverWarning
	}
	return 0
}

func (x *QuotaStats) GetQuotasOverCritical() int64 {
	if x != nil {
		return x.QuotasOverCritical
	}
	return 0
}

func (x *QuotaStats) GetExpiredQuotas() int64 {
	if x != nil {
		return x.ExpiredQuotas
	}
	return 0
}

func (x *QuotaStats) GetUnlimitedQuotas() int64 {
	if x != nil {
		return x.UnlimitedQuotas
	}
	return 0
}

type GetQuotaStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Stats   *QuotaStats `protobuf:"bytes,3,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *GetQuotaStatsResponse) Reset() {
	*x = GetQuotaStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQuotaStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQuotaStatsResponse) ProtoMessage() {}

func (x *GetQuotaStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQuotaStatsResponse.ProtoReflect.Descriptor instead.
func (*GetQuotaStatsResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{32}
}

func (x *GetQuotaStatsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetQuotaStatsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetQuotaStatsResponse) GetStats() *QuotaStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type GetTenantQuotaOverviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId string `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
}

func (x *GetTenantQuotaOverviewRequest) Reset() {
	*x = GetTenantQuotaOverviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantQuotaOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotaOverviewRequest) ProtoMessage() {}

func (x *GetTenantQuotaOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotaOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetTenantQuotaOverviewRequest) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{33}
}

func (x *GetTenantQuotaOverviewRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type TenantQuotaOverview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TenantId          string  `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	TotalUsers        int64   `protobuf:"varint,2,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalQuotas       int64   `protobuf:"varint,3,opt,name=total_quotas,json=totalQuotas,proto3" json:"total_quotas,omitempty"`
	TotalAllocated    int64   `protobuf:"varint,4,opt,name=total_allocated,json=totalAllocated,proto3" json:"total_allocated,omitempty"`
	TotalUsed         int64   `protobuf:"varint,5,opt,name=total_used,json=totalUsed,proto3" json:"total_used,omitempty"`
	TotalAvailable    int64   `protobuf:"varint,6,opt,name=total_available,json=totalAvailable,proto3" json:"total_available,omitempty"`
	UsagePercentage   float64 `protobuf:"fixed64,7,opt,name=usage_percentage,json=usagePercentage,proto3" json:"usage_percentage,omitempty"`
	ActiveAlerts      int64   `protobuf:"varint,8,opt,name=active_alerts,json=activeAlerts,proto3" json:"active_alerts,omitempty"`
	CriticalAlerts    int64   `protobuf:"varint,9,opt,name=critical_alerts,json=criticalAlerts,proto3" json:"critical_alerts,omitempty"`
	UsersOverWarning  int64   `protobuf:"varint,10,opt,name=users_over_warning,json=usersOverWarning,proto3" json:"users_over_warning,omitempty"`
	UsersOverCritical int64   `protobuf:"varint,11,opt,name=users_over_critical,json=usersOverCritical,proto3" json:"users_over_critical,omitempty"`
}

func (x *TenantQuotaOverview) Reset() {
	*x = TenantQuotaOverview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TenantQuotaOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TenantQuotaOverview) ProtoMessage() {}

func (x *TenantQuotaOverview) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TenantQuotaOverview.ProtoReflect.Descriptor instead.
func (*TenantQuotaOverview) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{34}
}

func (x *TenantQuotaOverview) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *TenantQuotaOverview) GetTotalUsers() int64 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *TenantQuotaOverview) GetTotalQuotas() int64 {
	if x != nil {
		return x.TotalQuotas
	}
	return 0
}

func (x *TenantQuotaOverview) GetTotalAllocated() int64 {
	if x != nil {
		return x.TotalAllocated
	}
	return 0
}

func (x *TenantQuotaOverview) GetTotalUsed() int64 {
	if x != nil {
		return x.TotalUsed
	}
	return 0
}

func (x *TenantQuotaOverview) GetTotalAvailable() int64 {
	if x != nil {
		return x.TotalAvailable
	}
	return 0
}

func (x *TenantQuotaOverview) GetUsagePercentage() float64 {
	if x != nil {
		return x.UsagePercentage
	}
	return 0
}

func (x *TenantQuotaOverview) GetActiveAlerts() int64 {
	if x != nil {
		return x.ActiveAlerts
	}
	return 0
}

func (x *TenantQuotaOverview) GetCriticalAlerts() int64 {
	if x != nil {
		return x.CriticalAlerts
	}
	return 0
}

func (x *TenantQuotaOverview) GetUsersOverWarning() int64 {
	if x != nil {
		return x.UsersOverWarning
	}
	return 0
}

func (x *TenantQuotaOverview) GetUsersOverCritical() int64 {
	if x != nil {
		return x.UsersOverCritical
	}
	return 0
}

type GetTenantQuotaOverviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success  bool                 `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message  string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Overview *TenantQuotaOverview `protobuf:"bytes,3,opt,name=overview,proto3" json:"overview,omitempty"`
}

func (x *GetTenantQuotaOverviewResponse) Reset() {
	*x = GetTenantQuotaOverviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_quota_quota_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTenantQuotaOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTenantQuotaOverviewResponse) ProtoMessage() {}

func (x *GetTenantQuotaOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_quota_quota_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTenantQuotaOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetTenantQuotaOverviewResponse) Descriptor() ([]byte, []int) {
	return file_quota_quota_proto_rawDescGZIP(), []int{35}
}

func (x *GetTenantQuotaOverviewResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetTenantQuotaOverviewResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTenantQuotaOverviewResponse) GetOverview() *TenantQuotaOverview {
	if x != nil {
		return x.Overview
	}
	return nil
}

var File_quota_quota_proto protoreflect.FileDescriptor

var file_quota_quota_proto_rawDesc = []byte{
	0x0a, 0x11, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x05, 0x0a, 0x0c,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73, 0x65,
	0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x10, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x11, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f, 0x45, 0x78, 0x70,
	0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x45,
	0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x6e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x8b, 0x03, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xb8, 0x04, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x2f, 0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x0c, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x33, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x41, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x73,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f,
	0x6c, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa5, 0x03, 0x0a,
	0x0c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x42, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x42, 0x79, 0x22, 0xad, 0x03, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x11, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x65, 0x78,
	0x70, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x6f,
	0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78,
	0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d,
	0x61, 0x78, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73,
	0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x22, 0x7b, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x78,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0xae, 0x05, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x48, 0x02, 0x52, 0x10,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x48,
	0x03, 0x52, 0x11, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x6f, 0x5f,
	0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x04, 0x52, 0x0a,
	0x61, 0x75, 0x74, 0x6f, 0x45, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x48, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x45, 0x78, 0x70, 0x61, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x06, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x07, 0x52,
	0x0b, 0x69, 0x73, 0x55, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x42,
	0x14, 0x0a, 0x12, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63,
	0x61, 0x6c, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x42, 0x10, 0x0a, 0x0e,
	0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x1a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52,
	0x05, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x50, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xac, 0x02, 0x0a, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x20, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x0b, 0x69, 0x73, 0x55, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x6e,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x06,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xad, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x12, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xef, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x75, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x38, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x10, 0x74, 0x72,
	0x69, 0x67, 0x67, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52, 0x0f, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x65, 0x64, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0xf7, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x42, 0x12,
	0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0xc9, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x90,
	0x03, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x36, 0x0a, 0x0d, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x12, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41,
	0x6c, 0x65, 0x72, 0x74, 0x52, 0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x6b, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22,
	0x76, 0x0a, 0x17, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x73, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27,
	0x0a, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x52, 0x05, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2f, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12, 0x34,
	0x0a, 0x0a, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52, 0x09, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a,
	0x0b, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb8, 0x01, 0x0a,
	0x17, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x52,
	0x06, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xb4, 0x02, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x08, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x48, 0x01, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x12, 0x0a, 0x10, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x92,
	0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2d,
	0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x22, 0x9c, 0x03, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x07,
	0x71, 0x75, 0x6f, 0x74, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x48, 0x02, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xbd, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x22, 0xb3, 0x03, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x38, 0x0a, 0x18,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x16,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x55, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x14, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73,
	0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x4f, 0x76, 0x65, 0x72,
	0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12,
	0x29, 0x0a, 0x10, 0x75, 0x6e, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x65, 0x64, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x22, 0x74, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x3c, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbe,
	0x03, 0x0a, 0x13, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x6c,
	0x65, 0x72, 0x74, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x69, 0x74,
	0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x2e, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x43, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x22,
	0x8c, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69,
	0x65, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x76, 0x65, 0x72,
	0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x6f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x2a, 0x56,
	0x0a, 0x09, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x51,
	0x55, 0x4f, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47,
	0x45, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x57, 0x49, 0x44, 0x54, 0x48, 0x10, 0x01, 0x12, 0x17, 0x0a,
	0x13, 0x51, 0x55, 0x4f, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x53, 0x10, 0x02, 0x2a, 0x55, 0x0a, 0x09, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41,
	0x4c, 0x45, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43,
	0x41, 0x4c, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x58, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x58, 0x0a,
	0x0b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x13,
	0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x41, 0x4c, 0x45, 0x52, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x53,
	0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xb0, 0x01, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x45, 0x41, 0x4c, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x14,
	0x0a, 0x10, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x03, 0x12, 0x17,
	0x0a, 0x13, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58,
	0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x05, 0x32, 0x86, 0x0a, 0x0a, 0x0c, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x12, 0x20, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x1d, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x20,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x73, 0x12, 0x1f, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x55, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x65,
	0x72, 0x74, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1d, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61,
	0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e,
	0x4d, 0x61, 0x72, 0x6b, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x41, 0x73, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x41, 0x6c, 0x65, 0x72, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1d, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x4c,
	0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x1e, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x51, 0x75, 0x6f, 0x74,
	0x61, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x1b, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f,
	0x74, 0x61, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x76,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x12, 0x24, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x4f, 0x76, 0x65,
	0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x51, 0x75,
	0x6f, 0x74, 0x61, 0x4f, 0x76, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x69, 0x72, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x61,
	0x6d, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71,
	0x75, 0x6f, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_quota_quota_proto_rawDescOnce sync.Once
	file_quota_quota_proto_rawDescData = file_quota_quota_proto_rawDesc
)

func file_quota_quota_proto_rawDescGZIP() []byte {
	file_quota_quota_proto_rawDescOnce.Do(func() {
		file_quota_quota_proto_rawDescData = protoimpl.X.CompressGZIP(file_quota_quota_proto_rawDescData)
	})
	return file_quota_quota_proto_rawDescData
}

var file_quota_quota_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_quota_quota_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_quota_quota_proto_goTypes = []any{
	(QuotaType)(0),                         // 0: quota.QuotaType
	(AlertType)(0),                         // 1: quota.AlertType
	(AlertStatus)(0),                       // 2: quota.AlertStatus
	(ActionType)(0),                        // 3: quota.ActionType
	(*StorageQuota)(nil),                   // 4: quota.StorageQuota
	(*QuotaUsage)(nil),                     // 5: quota.QuotaUsage
	(*QuotaAlert)(nil),                     // 6: quota.QuotaAlert
	(*QuotaHistory)(nil),                   // 7: quota.QuotaHistory
	(*CreateStorageQuotaRequest)(nil),      // 8: quota.CreateStorageQuotaRequest
	(*CreateStorageQuotaResponse)(nil),     // 9: quota.CreateStorageQuotaResponse
	(*GetStorageQuotaRequest)(nil),         // 10: quota.GetStorageQuotaRequest
	(*GetStorageQuotaResponse)(nil),        // 11: quota.GetStorageQuotaResponse
	(*UpdateStorageQuotaRequest)(nil),      // 12: quota.UpdateStorageQuotaRequest
	(*UpdateStorageQuotaResponse)(nil),     // 13: quota.UpdateStorageQuotaResponse
	(*DeleteStorageQuotaRequest)(nil),      // 14: quota.DeleteStorageQuotaRequest
	(*DeleteStorageQuotaResponse)(nil),     // 15: quota.DeleteStorageQuotaResponse
	(*ListStorageQuotasRequest)(nil),       // 16: quota.ListStorageQuotasRequest
	(*ListStorageQuotasResponse)(nil),      // 17: quota.ListStorageQuotasResponse
	(*UpdateQuotaUsageRequest)(nil),        // 18: quota.UpdateQuotaUsageRequest
	(*UpdateQuotaUsageResponse)(nil),       // 19: quota.UpdateQuotaUsageResponse
	(*GetQuotaUsageRequest)(nil),           // 20: quota.GetQuotaUsageRequest
	(*GetQuotaUsageResponse)(nil),          // 21: quota.GetQuotaUsageResponse
	(*ListQuotaUsageRequest)(nil),          // 22: quota.ListQuotaUsageRequest
	(*ListQuotaUsageResponse)(nil),         // 23: quota.ListQuotaUsageResponse
	(*GetQuotaAlertsRequest)(nil),          // 24: quota.GetQuotaAlertsRequest
	(*GetQuotaAlertsResponse)(nil),         // 25: quota.GetQuotaAlertsResponse
	(*MarkAlertAsReadRequest)(nil),         // 26: quota.MarkAlertAsReadRequest
	(*MarkAlertAsReadResponse)(nil),        // 27: quota.MarkAlertAsReadResponse
	(*ListQuotaAlertsRequest)(nil),         // 28: quota.ListQuotaAlertsRequest
	(*ListQuotaAlertsResponse)(nil),        // 29: quota.ListQuotaAlertsResponse
	(*GetQuotaHistoryRequest)(nil),         // 30: quota.GetQuotaHistoryRequest
	(*GetQuotaHistoryResponse)(nil),        // 31: quota.GetQuotaHistoryResponse
	(*ListQuotaHistoryRequest)(nil),        // 32: quota.ListQuotaHistoryRequest
	(*ListQuotaHistoryResponse)(nil),       // 33: quota.ListQuotaHistoryResponse
	(*GetQuotaStatsRequest)(nil),           // 34: quota.GetQuotaStatsRequest
	(*QuotaStats)(nil),                     // 35: quota.QuotaStats
	(*GetQuotaStatsResponse)(nil),          // 36: quota.GetQuotaStatsResponse
	(*GetTenantQuotaOverviewRequest)(nil),  // 37: quota.GetTenantQuotaOverviewRequest
	(*TenantQuotaOverview)(nil),            // 38: quota.TenantQuotaOverview
	(*GetTenantQuotaOverviewResponse)(nil), // 39: quota.GetTenantQuotaOverviewResponse
	(*timestamppb.Timestamp)(nil),          // 40: google.protobuf.Timestamp
}
var file_quota_quota_proto_depIdxs = []int32{
	40, // 0: quota.StorageQuota.expires_at:type_name -> google.protobuf.Timestamp
	40, // 1: quota.StorageQuota.created_at:type_name -> google.protobuf.Timestamp
	40, // 2: quota.StorageQuota.updated_at:type_name -> google.protobuf.Timestamp
	40, // 3: quota.QuotaUsage.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 4: quota.QuotaAlert.alert_type:type_name -> quota.AlertType
	2,  // 5: quota.QuotaAlert.status:type_name -> quota.AlertStatus
	40, // 6: quota.QuotaAlert.triggered_at:type_name -> google.protobuf.Timestamp
	40, // 7: quota.QuotaAlert.read_at:type_name -> google.protobuf.Timestamp
	40, // 8: quota.QuotaAlert.resolved_at:type_name -> google.protobuf.Timestamp
	3,  // 9: quota.QuotaHistory.action:type_name -> quota.ActionType
	40, // 10: quota.QuotaHistory.timestamp:type_name -> google.protobuf.Timestamp
	40, // 11: quota.CreateStorageQuotaRequest.expires_at:type_name -> google.protobuf.Timestamp
	4,  // 12: quota.CreateStorageQuotaResponse.quota:type_name -> quota.StorageQuota
	4,  // 13: quota.GetStorageQuotaResponse.quota:type_name -> quota.StorageQuota
	40, // 14: quota.UpdateStorageQuotaRequest.expires_at:type_name -> google.protobuf.Timestamp
	4,  // 15: quota.UpdateStorageQuotaResponse.quota:type_name -> quota.StorageQuota
	4,  // 16: quota.ListStorageQuotasResponse.quotas:type_name -> quota.StorageQuota
	5,  // 17: quota.UpdateQuotaUsageResponse.usage:type_name -> quota.QuotaUsage
	4,  // 18: quota.UpdateQuotaUsageResponse.updated_quota:type_name -> quota.StorageQuota
	6,  // 19: quota.UpdateQuotaUsageResponse.triggered_alerts:type_name -> quota.QuotaAlert
	40, // 20: quota.GetQuotaUsageRequest.start_date:type_name -> google.protobuf.Timestamp
	40, // 21: quota.GetQuotaUsageRequest.end_date:type_name -> google.protobuf.Timestamp
	5,  // 22: quota.GetQuotaUsageResponse.usage_records:type_name -> quota.QuotaUsage
	40, // 23: quota.ListQuotaUsageRequest.start_date:type_name -> google.protobuf.Timestamp
	40, // 24: quota.ListQuotaUsageRequest.end_date:type_name -> google.protobuf.Timestamp
	5,  // 25: quota.ListQuotaUsageResponse.usage_records:type_name -> quota.QuotaUsage
	2,  // 26: quota.GetQuotaAlertsRequest.status:type_name -> quota.AlertStatus
	1,  // 27: quota.GetQuotaAlertsRequest.alert_type:type_name -> quota.AlertType
	6,  // 28: quota.GetQuotaAlertsResponse.alerts:type_name -> quota.QuotaAlert
	6,  // 29: quota.MarkAlertAsReadResponse.alert:type_name -> quota.QuotaAlert
	2,  // 30: quota.ListQuotaAlertsRequest.status:type_name -> quota.AlertStatus
	1,  // 31: quota.ListQuotaAlertsRequest.alert_type:type_name -> quota.AlertType
	6,  // 32: quota.ListQuotaAlertsResponse.alerts:type_name -> quota.QuotaAlert
	40, // 33: quota.GetQuotaHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	40, // 34: quota.GetQuotaHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	3,  // 35: quota.GetQuotaHistoryRequest.action:type_name -> quota.ActionType
	7,  // 36: quota.GetQuotaHistoryResponse.history:type_name -> quota.QuotaHistory
	3,  // 37: quota.ListQuotaHistoryRequest.action:type_name -> quota.ActionType
	40, // 38: quota.ListQuotaHistoryRequest.start_date:type_name -> google.protobuf.Timestamp
	40, // 39: quota.ListQuotaHistoryRequest.end_date:type_name -> google.protobuf.Timestamp
	7,  // 40: quota.ListQuotaHistoryResponse.history:type_name -> quota.QuotaHistory
	40, // 41: quota.GetQuotaStatsRequest.start_date:type_name -> google.protobuf.Timestamp
	40, // 42: quota.GetQuotaStatsRequest.end_date:type_name -> google.protobuf.Timestamp
	35, // 43: quota.GetQuotaStatsResponse.stats:type_name -> quota.QuotaStats
	38, // 44: quota.GetTenantQuotaOverviewResponse.overview:type_name -> quota.TenantQuotaOverview
	8,  // 45: quota.QuotaService.CreateStorageQuota:input_type -> quota.CreateStorageQuotaRequest
	10, // 46: quota.QuotaService.GetStorageQuota:input_type -> quota.GetStorageQuotaRequest
	12, // 47: quota.QuotaService.UpdateStorageQuota:input_type -> quota.UpdateStorageQuotaRequest
	14, // 48: quota.QuotaService.DeleteStorageQuota:input_type -> quota.DeleteStorageQuotaRequest
	16, // 49: quota.QuotaService.ListStorageQuotas:input_type -> quota.ListStorageQuotasRequest
	18, // 50: quota.QuotaService.UpdateQuotaUsage:input_type -> quota.UpdateQuotaUsageRequest
	20, // 51: quota.QuotaService.GetQuotaUsage:input_type -> quota.GetQuotaUsageRequest
	22, // 52: quota.QuotaService.ListQuotaUsage:input_type -> quota.ListQuotaUsageRequest
	24, // 53: quota.QuotaService.GetQuotaAlerts:input_type -> quota.GetQuotaAlertsRequest
	26, // 54: quota.QuotaService.MarkAlertAsRead:input_type -> quota.MarkAlertAsReadRequest
	28, // 55: quota.QuotaService.ListQuotaAlerts:input_type -> quota.ListQuotaAlertsRequest
	30, // 56: quota.QuotaService.GetQuotaHistory:input_type -> quota.GetQuotaHistoryRequest
	32, // 57: quota.QuotaService.ListQuotaHistory:input_type -> quota.ListQuotaHistoryRequest
	34, // 58: quota.QuotaService.GetQuotaStats:input_type -> quota.GetQuotaStatsRequest
	37, // 59: quota.QuotaService.GetTenantQuotaOverview:input_type -> quota.GetTenantQuotaOverviewRequest
	9,  // 60: quota.QuotaService.CreateStorageQuota:output_type -> quota.CreateStorageQuotaResponse
	11, // 61: quota.QuotaService.GetStorageQuota:output_type -> quota.GetStorageQuotaResponse
	13, // 62: quota.QuotaService.UpdateStorageQuota:output_type -> quota.UpdateStorageQuotaResponse
	15, // 63: quota.QuotaService.DeleteStorageQuota:output_type -> quota.DeleteStorageQuotaResponse
	17, // 64: quota.QuotaService.ListStorageQuotas:output_type -> quota.ListStorageQuotasResponse
	19, // 65: quota.QuotaService.UpdateQuotaUsage:output_type -> quota.UpdateQuotaUsageResponse
	21, // 66: quota.QuotaService.GetQuotaUsage:output_type -> quota.GetQuotaUsageResponse
	23, // 67: quota.QuotaService.ListQuotaUsage:output_type -> quota.ListQuotaUsageResponse
	25, // 68: quota.QuotaService.GetQuotaAlerts:output_type -> quota.GetQuotaAlertsResponse
	27, // 69: quota.QuotaService.MarkAlertAsRead:output_type -> quota.MarkAlertAsReadResponse
	29, // 70: quota.QuotaService.ListQuotaAlerts:output_type -> quota.ListQuotaAlertsResponse
	31, // 71: quota.QuotaService.GetQuotaHistory:output_type -> quota.GetQuotaHistoryResponse
	33, // 72: quota.QuotaService.ListQuotaHistory:output_type -> quota.ListQuotaHistoryResponse
	36, // 73: quota.QuotaService.GetQuotaStats:output_type -> quota.GetQuotaStatsResponse
	39, // 74: quota.QuotaService.GetTenantQuotaOverview:output_type -> quota.GetTenantQuotaOverviewResponse
	60, // [60:75] is the sub-list for method output_type
	45, // [45:60] is the sub-list for method input_type
	45, // [45:45] is the sub-list for extension type_name
	45, // [45:45] is the sub-list for extension extendee
	0,  // [0:45] is the sub-list for field type_name
}

func init() { file_quota_quota_proto_init() }
func file_quota_quota_proto_init() {
	if File_quota_quota_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_quota_quota_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StorageQuota); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*QuotaUsage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*QuotaAlert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*QuotaHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStorageQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CreateStorageQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetStorageQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetStorageQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateStorageQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateStorageQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteStorageQuotaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteStorageQuotaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListStorageQuotasRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ListStorageQuotasResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuotaUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateQuotaUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaUsageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaUsageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*MarkAlertAsReadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*MarkAlertAsReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaAlertsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaAlertsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*ListQuotaHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*QuotaStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*GetQuotaStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*GetTenantQuotaOverviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*TenantQuotaOverview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_quota_quota_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetTenantQuotaOverviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_quota_quota_proto_msgTypes[6].OneofWrappers = []any{
		(*GetStorageQuotaRequest_Id)(nil),
		(*GetStorageQuotaRequest_Uuid)(nil),
	}
	file_quota_quota_proto_msgTypes[8].OneofWrappers = []any{
		(*UpdateStorageQuotaRequest_Id)(nil),
		(*UpdateStorageQuotaRequest_Uuid)(nil),
	}
	file_quota_quota_proto_msgTypes[10].OneofWrappers = []any{
		(*DeleteStorageQuotaRequest_Id)(nil),
		(*DeleteStorageQuotaRequest_Uuid)(nil),
	}
	file_quota_quota_proto_msgTypes[12].OneofWrappers = []any{}
	file_quota_quota_proto_msgTypes[14].OneofWrappers = []any{
		(*UpdateQuotaUsageRequest_QuotaId)(nil),
		(*UpdateQuotaUsageRequest_QuotaUuid)(nil),
	}
	file_quota_quota_proto_msgTypes[16].OneofWrappers = []any{
		(*GetQuotaUsageRequest_QuotaId)(nil),
		(*GetQuotaUsageRequest_QuotaUuid)(nil),
	}
	file_quota_quota_proto_msgTypes[18].OneofWrappers = []any{}
	file_quota_quota_proto_msgTypes[20].OneofWrappers = []any{
		(*GetQuotaAlertsRequest_QuotaId)(nil),
		(*GetQuotaAlertsRequest_QuotaUuid)(nil),
	}
	file_quota_quota_proto_msgTypes[22].OneofWrappers = []any{
		(*MarkAlertAsReadRequest_Id)(nil),
		(*MarkAlertAsReadRequest_Uuid)(nil),
	}
	file_quota_quota_proto_msgTypes[24].OneofWrappers = []any{}
	file_quota_quota_proto_msgTypes[26].OneofWrappers = []any{
		(*GetQuotaHistoryRequest_QuotaId)(nil),
		(*GetQuotaHistoryRequest_QuotaUuid)(nil),
	}
	file_quota_quota_proto_msgTypes[28].OneofWrappers = []any{}
	file_quota_quota_proto_msgTypes[30].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_quota_quota_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_quota_quota_proto_goTypes,
		DependencyIndexes: file_quota_quota_proto_depIdxs,
		EnumInfos:         file_quota_quota_proto_enumTypes,
		MessageInfos:      file_quota_quota_proto_msgTypes,
	}.Build()
	File_quota_quota_proto = out.File
	file_quota_quota_proto_rawDesc = nil
	file_quota_quota_proto_goTypes = nil
	file_quota_quota_proto_depIdxs = nil
}
